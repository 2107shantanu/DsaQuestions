class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        // generic 2 Sum return all the possible combinations;
        unordered_map<int, int> mp;
        int n = nums.size();
        
        for(int i = 0; i < n; i++) {
            mp[nums[i]] = i;
        }
        vector<vector<int>> res;
        
        for(int i = 0; i < n; i++) {
            if(mp.find(target - nums[i]) != mp.end() && mp[target - nums[i]] != i) {
                res.push_back({i, mp[target - nums[i]]});
            }
        }
        
        return res[0];
}

};
